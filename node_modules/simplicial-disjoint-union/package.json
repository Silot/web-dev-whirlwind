{
  "_args": [
    [
      {
        "raw": "simplicial-disjoint-union@~0.0.0",
        "scope": null,
        "escapedName": "simplicial-disjoint-union",
        "name": "simplicial-disjoint-union",
        "rawSpec": "~0.0.0",
        "spec": ">=0.0.0 <0.1.0",
        "type": "range"
      },
      "/Users/tolis/devit/thess-web-workshop/node_modules/cube-mesh"
    ]
  ],
  "_from": "simplicial-disjoint-union@>=0.0.0 <0.1.0",
  "_id": "simplicial-disjoint-union@0.0.0",
  "_inCache": true,
  "_location": "/simplicial-disjoint-union",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "_npmVersion": "1.2.17",
  "_phantomChildren": {},
  "_requested": {
    "raw": "simplicial-disjoint-union@~0.0.0",
    "scope": null,
    "escapedName": "simplicial-disjoint-union",
    "name": "simplicial-disjoint-union",
    "rawSpec": "~0.0.0",
    "spec": ">=0.0.0 <0.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/cube-mesh"
  ],
  "_resolved": "https://registry.npmjs.org/simplicial-disjoint-union/-/simplicial-disjoint-union-0.0.0.tgz",
  "_shasum": "0d8590dc8ee25016c76014ae6b6719b4c45ddf81",
  "_shrinkwrap": null,
  "_spec": "simplicial-disjoint-union@~0.0.0",
  "_where": "/Users/tolis/devit/thess-web-workshop/node_modules/cube-mesh",
  "author": {
    "name": "Mikola Lysenko"
  },
  "bugs": {
    "url": "https://github.com/mikolalysenko/simplicial-disjoint-union/issues"
  },
  "dependencies": {
    "simplicial-complex": "~0.3.3"
  },
  "description": "Concatenates two simplicial complexes",
  "devDependencies": {
    "tap": "~0.4.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "0d8590dc8ee25016c76014ae6b6719b4c45ddf81",
    "tarball": "https://registry.npmjs.org/simplicial-disjoint-union/-/simplicial-disjoint-union-0.0.0.tgz"
  },
  "gitHead": "b2222ba3dd85810d3dba7a5dfa73e03a26a49284",
  "homepage": "https://github.com/mikolalysenko/simplicial-disjoint-union#readme",
  "keywords": [
    "concatenate",
    "mesh",
    "simplicial",
    "complex",
    "triangle",
    "surface",
    "union",
    "disjoint",
    "join",
    "inner",
    "coproduct"
  ],
  "license": "MIT",
  "main": "union.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "name": "simplicial-disjoint-union",
  "optionalDependencies": {},
  "readme": "simplicial-dijsoint-union\n=========================\nComputes the [disjoint union](http://en.wikipedia.org/wiki/Disjoint_union) of two [simplicial complexes](https://github.com/mikolalysenko/simplicial-complex).  You can use this to do stuff like concatenate meshes.\n\n## Install\n\n    npm install simplicial-disjoint-union\n\n\n## Usage\n\n```javascript\nvar disjointUnion = require(\"simplicial-disjoint-union\")\n\n//Example:\n//\n//    Combine a bunny and teapot into a single mesh\n//\n\n//First read in meshes\nvar bunny = require(\"bunny\")\n  , teapot = require(\"teapot\")\n\n//Then combine positions\nvar combinedPos = bunny.positions.concat(teapot.positions)\n\n//Finally combine cells using simplicial-disjoint-union\nvar combinedCells = disjointUniont(bunny.cells, teapot.cells)\n```\n\n### `require(\"simplicial-disjoint-union\")(a, b[, a_verts])`\nJoins two simplicial complexes together.\n\n* `a` and `b` are the complexes we are going to join\n* `a_verts` an optional parameter giving the number of vertices in `a` if not specified, is computed dynamically.\n\n**Returns** The cells in `a` concatenated to the cells in `b`, with the vertices in `b` relabeled by those in a's length.",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/simplicial-disjoint-union.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "version": "0.0.0"
}
